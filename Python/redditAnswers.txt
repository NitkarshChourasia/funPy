User avatar
level 5
EmptyChocolate4545
·
1 hr. ago

Hehe:

    learn vim more efficiently. Please

Ahaha I know that feeling. Have you rebound capslock to escape yet? That’s a trick from my mom that made my viming so much better, as you can just start tapping capslock with pinky all the time.

As for test suggestions, absolutely, I’ll take a look either this afternoon or tomorrow morning.

For something like this, I’d mix test files in with code, because this is just a repo containing plain unpackaged python - which isn’t a bad thing, this is a collection repo.

That said, id also recommend at some point soon starting to learn the basics of packaging. You should be very comfortable with:

    what virtualenvs actually are (a path hack)

    how to run things in a virtualenv without activating it (just call files in the bin folder)

    setting up your code so it is installable (setup.cfg, src structure)

    having your tests test against installed code.

    using console scripts to produce actual commands from your code

This isn’t important now, just file it away as something to learn at some point. I can tell by how you approach things that you’ll have no problem with it when you get there.

People make virtualenvs this big scary topic and act like they’re horrible, but I suspect most of them have never had to wrestle with makefiles and CMakeList linking, virtualenvs are great and actually quite simple once you get them.

Sorry for throwing another topic at you, but the ability to make your code installable is awesome and worth mentioning early.

I’ll absolutely take a look at this repo, write a few tests and show you how I’d approach it if this was something I was testing, but with the qualification that I would almost never mix tests in with code in the way I will be doing except for scratch/playground repos.

Which again, is not a bad thing, you’re doing code for classes/practice and collecting them in folders, this is exactly how you should be doing it.